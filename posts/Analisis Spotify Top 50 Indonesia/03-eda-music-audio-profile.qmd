---
title: "Analisis Spotify Top 50 Indonesia  - EDA"
format: 
  html: 
    df-print: paged
description: |
  Memahami penggunaan Spotify saya selama tahun 2022, dan tahun-tahun sebelumnya.
author: "Alif Dewantara"
title-block-banner: true
date: "2023-03-17"
categories: 
  - Analisis Data
  - Python
  - Musik
comments: 
  utterances: 
    repo: quarto-dev/quarto-web
    theme: github-light
    issue-term: title
image: "spotify2022.png"
---

# Bab 3, *Exploratory Data Analysis* (EDA)

```{r}
# memuat library
library(tidyverse)
library(reshape2)
library(ggridges)
library(magick)
```

```{r}
# Memuat data audio features
audio <- read.csv('datasets/audio_features.csv')
lyrics <- read.csv('datasets/data_lyrics.csv')
artist <- read.csv('datasets/artists.csv')
```

```{r}
lyrics_genre <- merge(audio, artist%>%select(artist_id, genres), by='artist_id')
```

```{r}
lyrics_genre$genres <- gsub('\\[|]', '', lyrics_genre$genres)
lyrics_genre <- separate(lyrics_genre, genres, into = c("genre1", "genre2", "genre3"), sep = ",")
```

```{r}
lyrics_genre <- lyrics_genre %>%
  mutate(genre = 
           case_when(
             grepl("pop", lyrics_genre$genre1) ~ "Pop",
             grepl("rock", lyrics_genre$genre1) ~ "Rock",
             grepl("jazz", lyrics_genre$genre1) ~ "Jazz",
             grepl("indie", lyrics_genre$genre1) ~ "Indie",
             grepl("r&b", lyrics_genre$genre1) ~ "R&B",
             grepl("boy band", lyrics_genre$genre1) ~ "Pop",
             grepl("folk", lyrics_genre$genre1) ~ "Folk",
             TRUE ~ "Other"))
```

```{r}
audio_genre <- merge(audio, lyrics_genre%>%select(id, genre), by='id')
```

```{r}
audio_grouped_median <- audio_genre %>%
  group_by(genre) %>%
  summarize(median_acoustic=median(acousticness), median_dance=median(danceability), median_energy=median(energy), median_valence=median(valence))
```

```{r}
melted<-audio_genre %>%
  select(genre, artist, track, danceability, energy, acousticness, valence) %>%
  melt(id.vars=c("genre","artist","track"), variable.name = "feature", value.name = 'score')
```

```{r}
medians<-melted%>%
  group_by(genre,feature)%>%
  summarise(median = median(score))
```

```{r}
#text annotations
text<-data.frame(
  language=c('DANCE POP','COUNTRY','ROCK'),
  feature = c('danceability','acousticness','danceability'),
  score = c(0.3, 0.7,0.85),
  label=c("Median Score \n per Genre & Feature","Country more \n acoustic than other genres","Rock is less \n danceable"),
  vjust=c(-2.3,-1.3, -1.8)
)

#labels for X axis
x_labels<-data.frame(
  genre=rep(0.6,8),
  label=c(rep("LESS",4),rep("MORE",4)),
  feature=rep(c("acousticness","danceability","energy","valence"),2),
  positions = c(rep(0.2,4),rep(0.8,4))
)

#labels for X ticks
x_ticks<-data.frame(
  y= rep(0.8,8),
  x= c(rep(0,4),rep(1,4)),
  label=c(rep(0,4),rep(1,4))
)

#custom for X axis
x_arrows<-data.frame(
  ystart= rep(0.8,2),
  yend = rep(0.8,2),
  xstart = c(0.4,0.6),
  xend = c(0.1,0.9)
)
```

```{r}
ggplot(melted, aes(x=score, y=language, fill=stat(x)))+
  facet_grid(~feature)+
  geom_density_ridges_gradient(scale = 0.85)+
  geom_density_ridges(inherit.aes=FALSE, data=melted, aes(x=score, y=language), fill=NA, quantile_lines=TRUE, scale=0.85, quantiles=2, linetype='dashed')+
  #geom_label(data=medians, aes(y=language, x=median, label=round(median,2)), 
             #vjust=-0.9, size=4,
             #label.size=NA, fill='black',color='white')+
  scale_fill_viridis_c(option='plasma')+
  #geom_text(data=text, aes(x=score, y=genre, label=label, vjust=vjust), size=3.5)+
  #geom_curve(data = data.frame(feature='danceability', x1=0.35, x2=0.58, y1=2.4,y2=2.22),curvature = 0.2, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.02, "npc")))+
  #geom_text(data=x_labels, aes(x=positions, y=genre, label=label))+
  #geom_text(data=x_ticks, aes(x=x, y=y, label=label), color="grey30")+
  #geom_segment(data=x_arrows, aes(x=xstart,xend=xend,y=ystart,yend=yend), color="black", arrow=arrow(type="open", length=unit(0.2,"cm")))+
  labs(x='SCORE',y='GENRE',title='MUSIC GENRE AUDIO PROFILES', 
       subtitle="Audio features created by Spotify, scaled from 0 to 1",
       caption="Data from Spotify API | Chart by @tanya_shapiro")+
  theme_minimal()+
  scale_x_continuous(limits=c(0,1))
  theme(text=element_text(),
        plot.title = element_text(hjust=0.5, margin=margin(b=10), size= 16),
        plot.subtitle=element_text(hjust=0.5, size = 12, margin=margin(b=20)),
        plot.margin=margin(t=20,b=0,l=10,r=10),
        plot.caption=element_text(size=9, vjust=7),
        legend.position = 'none',
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x=element_blank()
  )
```

```{r}

```
